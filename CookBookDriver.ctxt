#BlueJ class context
comment0.target=CookBookDriver
comment1.params=
comment1.target=CookBookDriver()
comment1.text=\ default\ no\ params\ constructor\r\n\ numRecipes,\ currentRecipes,\ newRecipeBatch\ fields\ set\ to\ default\r\n
comment10.params=filename
comment10.target=java.util.ArrayList\ getStringRecipeList(java.lang.String)
comment10.text=\ get\ String\ version\ of\ recipes\r\n\ @param\ filename\ (Str)\ -\ .txt\ file\ containing\ recipes\r\n\ recipeList\ (ArrayList)\ -\ collection\ of\ Str\ details\ of\ recipes\r\n
comment11.params=filename
comment11.target=java.util.ArrayList\ readRecipeObjectsFromFile(java.lang.String)
comment11.text=\ read\ &\ pull\ recipe\ objects\ from\ data\ file\r\n\ @param\ filename\ (Str)\ -\ .bin\ file\ to\ read\r\n
comment12.params=filename
comment12.target=void\ writeRecipeObjectsToFile(java.lang.String)
comment12.text=\ write\ recipes\ as\ objects\ to\ data\ file\r\n\ @param\ filename\ (Str)\ -\ .bin\ filename\ to\ write\ to\r\n
comment13.params=recipeArr
comment13.target=void\ displayRecipes(java.util.ArrayList)
comment13.text=\ format\ and\ display\ recipe\ details\r\n\ @param\ recipeArr\ (ArrayList<BasicRecipe>)\ -\ recipes\ to\ print\r\n
comment14.params=filename
comment14.target=java.util.ArrayList\ readRecipeArrayListFile(java.lang.String)
comment14.text=\ get\ recipe\ ArrayList\ from\ file\r\n\ @param\ filename\ (Str)\ -\ .bin\ file\ containing\ recipes\r\n\ @return\ newRecipeBatch\ (ArrayList)\ -\ collection\ of\ recipes\ from\ file\r\n
comment15.params=filename
comment15.target=void\ writeRecipeArrayListFile(java.lang.String)
comment15.text=write\ recipe\ ArrayList\ to\ file\ as\ one\ object\r\n\ @param\ filename\ (Str)\ -\ name\ of\ file\ to\ write\ to\r\n
comment16.params=args
comment16.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ displayMenu()
comment2.text=\ display\ menu\ options\r\n\ \r\n
comment3.params=
comment3.target=void\ displayRecipeTypeOptions()
comment3.text=\ display\ recipe\ type\ options\r\n\ \r\n
comment4.params=
comment4.target=java.lang.String\ getMenuChoice()
comment4.text=\ get\ valid\ menu\ choice\ input\r\n\ @return\ menuChoice\ (Str)\ -\ valid\ option\ selected\ from\ menu\r\n
comment5.params=
comment5.target=java.lang.String\ getRecipeTypeChoice()
comment5.text=\ get\ valid\ recipe\ type\ choice\r\n\ @return\ typeChoice\ (Str)\ -\ selected\ recipe\ type\r\n
comment6.params=type
comment6.target=BasicRecipe\ createNewRecipe(java.lang.String)
comment6.text=\ create\ new\ recipe\ by\ type\r\n\ @param\ type\ (Str)\ -\ the\ type\ of\ recipe\ to\ be\ made\r\n\ @pre\ type\ selection\ must\ be\ made\ and\ passed\ to\ method\r\n\ @post\ new\ recipe\ object\ created,\ added\ to\ currentRecipes,\ numRecipes\ incremented\r\n
comment7.params=
comment7.target=void\ getChoiceSetNewRecipe()
comment7.text=get\ recipe\ type\ choice\ and\ create\ a\ new\ recipe\ obj,\ newRecipe\r\n\ \r\n
comment8.params=typeOption
comment8.target=java.lang.String\ getNewTitle(java.lang.String)
comment8.text=get\ new\ recipe\ title\ input\r\n\ @param\ typeOption\ (Str)\ -\ the\ type\ of\ recipe\ being\ made,\ used\ for\ prompt\r\n
comment9.params=
comment9.target=void\ setNewTitle()
comment9.text=\ set\ new\ recipe\ title\r\n\ \r\n
numComments=17
