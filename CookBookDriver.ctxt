#BlueJ class context
comment0.target=CookBookDriver
comment1.params=
comment1.target=CookBookDriver()
comment1.text=\ default\ no\ params\ constructor\r\n\ numRecipes,\ currentRecipes,\ newRecipeBatch\ fields\ set\ to\ default\r\n
comment10.params=type
comment10.target=BasicRecipe\ createNewRecipe(java.lang.String)
comment10.text=\ create\ new\ recipe\ by\ type\r\n\ @param\ type\ (Str)\ -\ the\ type\ of\ recipe\ to\ be\ made\r\n\ @pre\ type\ selection\ must\ be\ made\ and\ passed\ to\ method\r\n\ @post\ new\ recipe\ object\ created,\ added\ to\ currentRecipes,\ numRecipes\ incremented\r\n
comment11.params=
comment11.target=void\ getChoiceSetNewRecipe()
comment11.text=get\ recipe\ type\ choice\ and\ create\ a\ new\ recipe\ obj,\ newRecipe\r\n\ \r\n
comment12.params=typeOption
comment12.target=java.lang.String\ getNewTitle(java.lang.String)
comment12.text=get\ new\ recipe\ title\ input\r\n\ @param\ typeOption\ (Str)\ -\ the\ type\ of\ recipe\ being\ made,\ used\ for\ prompt\r\n
comment13.params=
comment13.target=void\ setNewTitle()
comment13.text=\ set\ new\ recipe\ title\r\n\ \r\n
comment14.params=
comment14.target=void\ mergeRecipeLists()
comment14.text=\ merge\ current\ recipes\ ArrayList\ with\ loaded\ recipes\ ArrayList\r\n\ newRecipeBatch\ added\ to\ currentRecipes\r\n
comment15.params=recipeTitle
comment15.target=boolean\ recipeInCurrentRecipes(java.lang.String)
comment15.text=search\ for\ recipe\ in\ current\ recipes\ list\ by\ title\r\n\ @param\ recipeTitle\ (Str)\ -\ title\ of\ desired\ recipe\r\n\ @return\ boolean\ -\ true\ if\ recipe\ found\r\n
comment16.params=recipeTitle
comment16.target=boolean\ recipeInNewRecipeBatch(java.lang.String)
comment16.text=search\ for\ recipe\ in\ new\ recipe\ batch\ list\ by\ title\r\n\ @param\ recipeTitle\ (Str)\ -\ title\ of\ desired\ recipe\r\n\ @return\ boolean\ -\ true\ if\ recipe\ found\r\n
comment17.params=
comment17.target=void\ findRecipeByTitle()
comment17.text=search\ for\ recipe\ by\ title\ and\ display\ recipe\ details\ (menu\ option\ 7)\r\n\ \r\n
comment18.params=
comment18.target=java.lang.String\ getTitleInput()
comment18.text=get\ recipe\ title\ input\r\n\ @return\ recipeTitle\ (Str)\ -\ lowercase\ recipe\ title\r\n
comment19.params=recipeList\ recipeTitle
comment19.target=void\ deleteRecipe(java.util.ArrayList,\ java.lang.String)
comment19.text=\ delete\ recipe\ from\ recipe\ list\r\n\ @param\ recipeList\ (ArrayList<BasicRecipe>)\ -\ list\ containing\ desired\ recipe\r\n\ @param\ recipeTitle\ (Str)\ -\ title\ of\ desired\ recipe\r\n
comment2.params=
comment2.target=void\ displayMenu()
comment2.text=\ display\ menu\ options\r\n\ \r\n
comment20.params=
comment20.target=void\ findAndDeleteRecipe()
comment20.text=find\ recipe\ by\ title\ and\ delete\ (menu\ option\ 8)\r\n\ \r\n
comment21.params=filename
comment21.target=java.util.ArrayList\ getStringRecipeList(java.lang.String)
comment21.text=\ get\ String\ version\ of\ recipes\r\n\ @param\ filename\ (Str)\ -\ .txt\ file\ containing\ recipes\r\n\ recipeList\ (ArrayList)\ -\ collection\ of\ Str\ details\ of\ recipes\r\n
comment22.params=filename
comment22.target=java.util.ArrayList\ readRecipeObjectsFromFile(java.lang.String)
comment22.text=\ read\ recipe\ objects\ from\ data\ file\ &\ add\ them\ to\ newRecipeBatch\ ArrayList\r\n\ @param\ filename\ (Str)\ -\ .bin\ file\ to\ read\r\n
comment23.params=filename
comment23.target=void\ writeRecipeObjectsToFile(java.lang.String)
comment23.text=\ write\ recipes\ as\ objects\ to\ data\ file\ item-by-item\ (outside\ of\ arrayList)\r\n\ @param\ filename\ (Str)\ -\ .bin\ filename\ to\ write\ to\r\n
comment24.params=recipeArr
comment24.target=void\ displayRecipes(java.util.ArrayList)
comment24.text=\ format\ and\ display\ recipe\ details\ (menu\ options\ 2\ &\ 5)\r\n\ @param\ recipeArr\ (ArrayList<BasicRecipe>)\ -\ recipes\ to\ print\r\n
comment25.params=recipeList\ recipeTitle
comment25.target=void\ displayRecipe(java.util.ArrayList,\ java.lang.String)
comment25.text=display\ one\ recipe\r\n\ @param\ recipeList\ (ArrayList<BasicRecipe>)\ -\ recipe\ list\ with\ desired\ recipe\r\n\ @param\ recipeTitle\ (Str)\ -\ title\ of\ desired\ recipe\r\n
comment26.params=filename
comment26.target=java.util.ArrayList\ readRecipeArrayListFile(java.lang.String)
comment26.text=\ get\ recipe\ ArrayList\ from\ file\r\n\ @param\ filename\ (Str)\ -\ .bin\ file\ containing\ recipes\r\n\ @return\ newRecipeBatch\ (ArrayList)\ -\ collection\ of\ recipes\ from\ file\r\n
comment27.params=filename\ recipeList
comment27.target=void\ writeRecipeArrayListFile(java.lang.String,\ java.util.ArrayList)
comment27.text=write\ recipe\ ArrayList\ to\ file\ as\ one\ object\r\n\ @param\ filename\ (Str)\ -\ name\ of\ file\ to\ write\ to\r\n
comment28.params=recipeList\ filename
comment28.target=void\ saveRecipeList(java.util.ArrayList,\ java.lang.String)
comment28.text=save\ recipes\ list\ to\ file\ (menu\ option\ 3)\r\n\ @param\ recipeList\ (ArrayList<BasicRecipe>)\ -\ list\ of\ recipes\ to\ save\r\n\ @pre\ recipes\ list\ should\ not\ be\ empty\ when\ passed\ to\ method\r\n\ @post\ entire\ recipes\ list\ is\ saved\ as\ object\ in\ .bin\ file\r\n
comment29.params=
comment29.target=void\ loadRecipeList()
comment29.text=\ get\ filename\ and\ load\ a\ recipe\ array\ from\ file\ (menu\ option\ 4)\r\n\ @post\ loaded\ recipe\ array\ is\ saved\ to\ newRecipeBatch\ ArrayList\r\n
comment3.params=
comment3.target=void\ displayGreeting()
comment3.text=display\ greeting\r\n\ \r\n
comment30.params=
comment30.target=java.lang.String\ getValidFilename()
comment30.text=\ get\ a\ new\ .bin\ filename\r\n\ filenames\ are\ valid\ if\ ending\ in\ .bin\r\n\ @return\ newFilename\ (Str)\ -\ .bin\ filename\r\n
comment31.params=args
comment31.target=void\ main(java.lang.String[])
comment4.params=
comment4.target=void\ displayRecipeTypeOptions()
comment4.text=\ display\ recipe\ type\ options\r\n\ \r\n
comment5.params=
comment5.target=java.lang.String\ getMenuChoice()
comment5.text=\ get\ valid\ menu\ choice\ input\r\n\ @return\ menuChoice\ (Str)\ -\ valid\ option\ selected\ from\ menu\r\n
comment6.params=
comment6.target=java.lang.String\ getRecipeTypeChoice()
comment6.text=\ get\ valid\ recipe\ type\ choice\r\n\ @return\ typeChoice\ (Str)\ -\ selected\ recipe\ type\r\n
comment7.params=
comment7.target=boolean\ addingIngredient()
comment7.text=get\ yes/no\ choice\ for\ adding\ ingredients\ to\ new\ recipe\r\n\ @return\ boolean\ -\ true\ if\ Yes\ chosen,\ i.e.\ an\ ingredient\ will\ be\ added\r\n
comment8.params=
comment8.target=void\ addIngredients()
comment8.text=\ get\ ingredient\ name\ and\ amount\ for\ new\ recipe,\ set\ new\ ingredient\r\n\ \r\n
comment9.params=
comment9.target=void\ setCookTime()
comment9.text=\ set\ cook\ time\ for\ new\ recipe\r\n\ \r\n
numComments=32
